# secret key used for hashing password
# this should be kept secret in production
# see: https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#handle-jwt-tokens
MB_SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7

# algorithm used for hashing password
# see: https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#handle-jwt-tokens
MB_ALGORITHM=HS256

# access token expire time in minutes.
MB_ACCESS_TOKEN_EXPIRE_MINUTES=120

# default superuser email
# used in creating the default superuser account for the application
MB_SUPERUSER_EMAIL=admin@admin.admin
# default superuser first name
# used in creating the default superuser account for the application
MB_SUPERUSER_FIRST_NAME=admin
# default superuser last name
# used in creating the default superuser account for the application
MB_SUPERUSER_LAST_NAME=admin
# default superuser username and password
# used in creating the default superuser account for the application
MB_SUPERUSER_USERNAME=test
MB_SUPERUSER_PASSWORD=password

# port that the backend will run on
# this can be changed if the application is hosted on raw metal server
# no need to change if the application is hosted in a container
# as it can be mapped to any port on the host
MB_PORT=8000

# number of fastapi workers per container
# set to 1 if load balancing is done at the cluster level
# set to larger number if only one container is running
# fastapi workers are in charge of responding to http requests
# this includes mostly read operations
# parsing raw data files is not done by fastapi workers
MB_FASTAPI_WORKERS=2

# file system root directory
# this is used to temporarily store files for exchange among workers
# this can be a folder on a shared file system
# or simply a docker volume mounted to multiple containers
# this folder manages itself
MB_FS_ROOT=/tmp

# backend url that can be accessed from public internet
# this will be used by fastapi to broadcast tasks
# this will be used by celery to access the files
#
# *** for use in fastapi workers, always set to the public address
# for example, https://<server-public-ip-or-domain>:<port>
# so that visiting this url yields backend dashboard
#
# *** for use in celery workers, two cases:
# 1. if celery workers have access to the same MB_FS_ROOT as fastapi workers
#    then set to the same value used in fastapi workers
# 2. if celery workers do not have access to the same MB_FS_ROOT as fastapi workers
#    then set to the address different from the one used in fastapi workers
#    in this case, this address can just be an arbitrary address --- as long as
#    it is different from the one used in fastapi workers
MB_MAIN_SITE=http://localhost:8000

# in case of running multiple backend containers using docker swarm
# set to a proper value, for example, 2*$(nproc)+1
MB_REPLICA=2

# mongodb related configurations

MONGO_DB_NAME=StrongMotion
# mongodb service host and port
# if mongodb container is running on the same host and port is exposed, set to localhost
# if mongodb container is running on the same host and port is not exposed, set to the service name
# if mongodb container is running on a different host, set to the host ip that is accessible from the backend container
# mongodb will be accessed by both fastapi and celery workers
# if any of them is running on a different host, make sure mongodb host is accessible from both
MONGO_HOST=localhost
MONGO_PORT=27017

# mongodb username and password
MONGO_USERNAME=test
MONGO_PASSWORD=password

# WiredTiger cache size in GB
MONGO_CACHE_SIZE=2
# mongodb memory limit
MONGO_MEM_LIMIT=10g

# rabbitmq related configurations
# rabbitmq service host and port
# if rabbitmq container is running on the same host and port 5672 is exposed, set to localhost
# if rabbitmq container is running on the same host and port 5672 is not exposed, set to the service name
# if rabbitmq container is running on a different host, set to the host ip that is accessible from the backend container
# rabbitmq will be accessed by both fastapi and celery workers
# if any of them is running on a different host, make sure rabbitmq host is accessible from both
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672

# rabbitmq username and password
RABBITMQ_USERNAME=test
RABBITMQ_PASSWORD=password

# elastic search related configurations
ELASTIC_VERSION=9.1.0
# elastic search will be accessed by fastapi workers
ELASTIC_HOST=localhost
